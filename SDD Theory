# SDD (Spec Driven Development) 規格驅動方式

- SDD 是一種軟體開發方法，強調在開發過程中使用規格來驅動設計和實現。這種方法有助於確保軟體的功能符合需求，並且可以提高開發效率。

## 理論

- 詳細分析階段：深入理解需求，識別潛在問題。
- 設計階段：創建全面的設計文件。
- 實作階段：基於詳細規格進行編碼。
- 這種方法論被認為非常理想，有望成為未來軟體開發的業界標準。以公司行號來說需要的是精準所以很合適.而不是個人 side proj 可以隨意發揮。

### 實作細節

- 首先你必須要清楚分析報告書的需求, 設計師的 UI 以及如何操作。以及SA提供的分析報告書有何問題或是遺漏會導致相關的問題,比如舊資料或是某種操作方式不合理等等之類。
  如果有就要跟SA討論清楚, 這樣才能確保開發的方向正確。任何不清楚的不合理的都要搞清楚. 簡單說就是要熟透分析報告書的內容。
- 規格書以及 UI都有了, 再來就是寫開發用的Prompt大綱, 
- 先寫標題
- 簡單描述該頁面是什麼
再來是 檔案位置
比如 前端: 相對路徑, 後端:相對路徑

接著是功能描述說明:
這邊開始就要詳細說明此次開發需求的功能, 假設我們要開發一個 有查詢條件 table 以及 顯示資料的 table 列表頁面.
我就會先說明上方區塊的查詢條件table的樣式,先貼到 prompt.md檔案 再來說明我這個table有哪些欄位設計.
再接續我就把 顯示table的樣式也是貼上去, 再來先說明要有那些欄位Header, 接著我會把我串好的sql也貼上接著要說明
欄位 header 如何與 sql 的欄位對應, 這樣才能確保前端顯示的資料正確.
以及說明該sql有哪些參數帶入的來源比如是 session 或是 url接收的 request參數等等.
簡單說就是詳細說明這頁面有那些東西比如 table? button? input?等等之類的接著說明資料如何串接比如是透過sql ?之類等等
為了避免說明不精準, 所以我會嘗試把 html 或是 sql 貼上去 明確說明如何對應. 如何sql 有主附表或是相關權限設計也要說明.
如果其他隻檔案或是prompt.md有類似的行為也可以直接在說明中直接參考 xxx檔案的哪個 function? 或是哪個共用 class 或是xxx.prompt.md檔案
如過不知道怎麼說明也可以使用截圖方式, 但要注意截圖的清晰度以及說明的完整性.

以上是我的手寫大綱, 接下來我就會請AI 來幫我完善規格書說明. 
比如: `XXX.prompt.md 是我的大綱, 幫我完善規格書. 只需要調整規格書內容不要實作開發`

當 AI幫我完善之後, 我會再次檢視確認是不是我要的規格. 這步驟很重要如果錯了 那後續依照此規格開發也會錯誤.
所以在實作開發之前我會花比較多時間去確認規格書內容是否正確.

通常ai完善的規格書都會有納入單元測試或是需要注意的地方, 如果覺得多於可以自行刪除但是我是都會保留

我的prompt.md檔案大概行數都會在 500行 上下, 最高不超過 7,800行
我覺得 上下文內容太多會讓AI無法理解, 所以我會盡量把內容精簡到500行上下, 這樣AI才有辦法理解.
但是太少又會有幻覺. (依據開發功能而定, 不是每個功能都會寫這麼長的行數)

我建議開發的功能都要搭配 prompt.md 檔案, 後續開發搞不好有些內容可以重覆使用. 不需要每次都重頭寫一堆內容
當開發久了就會發現可以種覆用的內容越來越多, 這樣就可以節省開發時間.最好是保持 xxx.prompt.md可以迭代更新

程式碼最好加上註解以及function開頭也要加入XML說明該function的功能, 這樣後續維護會比較容易.
如果不想動手寫這部分可以交給 instruction.md 的規範來實施.

當 prompt.md都沒問題了就可以交給AI來開發了. AI開發工具其實不是重點, 重點是開發的 prompt.md內容是否精確完善如果寫得差那使用哪個IDE或是LLM其實效果都很差
因為你提供的需求就太差了. 有時候如果AI開發的內容不符合預期, 要先檢討自己而不是AI難用. 我個人認為當自認為寫出一份不錯的prompt.md檔案開發之後
準確度不到70%的都該要檢討自己會不會說人話,  我自大至上使用起來都還滿順手的 ,基本上都有8,90%以上的準確度. 100%的也遇過不少次.
對我個人來說只要有 95%以上我就覺得很棒了

